<data>
    <!-- all utility functions or seperate math functions-->
    <action>
        function get_dist(x1, y1, x2, y2) {
            var dx = x2 - x1; var dy = y2 - y1;
            return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));
        }

        function toCartesian(radius, theta) {
            return {x: radius * Math.cos(theta), y: radius * Math.sin(theta)};
        }

        function toPolar(x, y) {
            return {radius: Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)), theta: Math.atan2(y, x)}
        }

        function roundDigits(number, digits) {
            return (Std.parseInt(Math.pow(10, digits) * Math.abs(number) - 0.5)+1) / Math.pow(10, digits) * sign(number);
        }

        // iterator to array
        function toArray(i) {
            var r = [];
            for (v in i) {
                r.push(v);
            }
            return r;
        }

        function minArray(a) {
            if (a == null || a == []) return null;
            var min = a[0] != null ? Std.parseFloat(a[0]) : Std.parseFloat(a.next());
            for (v in a) {
                var asint = Std.parseFloat(v); // this took me 30 minutes to realise this is the issue i hate this
                if (asint &lt; min) {
                    min = asint;
                }
            }
            return min; 
        }
        
        function setupListener(listenerid, f, ?globalname, ?priority) {
            globalname = globalname == null ? "crea_" + listenerid : globalname;
            priority = priority == null ? 9999 : priority;
            
            removeListener(listenerid, globalname);
            setGlobal(globalname, f);
            getContainer().stage.addEventListener(listenerid, getGlobal(globalname), false, 9999);
        }
        
        // i dont really need this one but it still feels convenient so eh why not
        function removeListener(listenerid, ?globalname) {
            globalname = globalname == null ? "crea_" + listenerid : globalname;
            var listener = getGlobal(globalname);
            if (listener != null) getContainer().stage.removeEventListener(listenerid, listener);
        }

        function prepGlobal(g, defaultval) {
            if (getGlobal(g) == null) {
                setGlobal(g, defaultval);
            }
        }
    </action>
</data>